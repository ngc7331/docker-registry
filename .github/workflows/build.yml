name: build-skopeo
on:
  push:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - dockerfile-suffix: ""
            tag-suffix: ""
            extra: "echo \"No extra step needed\""
          - dockerfile-suffix: ".skopeo"
            tag-suffix: "-skopeo"
            extra: "sudo apt update && sudo apt install jq curl make && make binaries && echo \"Extra step done\""

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get version
        run: |
          export SKOPEO_VERSION=$(sed -n -r 's/const Version = "(.*)"/\1/p' skopeo/version/version.go)
          export REGISTRY_VERSION=$(sed -n -r 's/REG_VERSION \?= (.*)/\1/p' Makefile)
          echo "SKOPEO_VERSION=${SKOPEO_VERSION}" >> $GITHUB_ENV
          echo "REGISTRY_VERSION=${REGISTRY_VERSION}" >> $GITHUB_ENV
          if [ "${{ matrix.tag-suffix }}" = "-skopeo" ]; then
            echo "TAG_SUFFIX=-skopeo${SKOPEO_VERSION}" >> $GITHUB_ENV
          else
            echo "TAG_SUFFIX=" >> $GITHUB_ENV
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run extra step
        run: ${{ matrix.extra }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile${{ matrix.dockerfile-suffix }}
          build-args: |
            REG_VERSION=${{ env.REGISTRY_VERSION }}
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ngc7331/registry:latest${{ matrix.tag-suffix }}
            ngc7331/registry:${{ env.REGISTRY_VERSION }}${{ env.TAG_SUFFIX }}
            ghcr.io/${{ github.repository }}:latest${{ matrix.tag-suffix }}
            ghcr.io/${{ github.repository }}:${{ env.REGISTRY_VERSION }}${{ env.TAG_SUFFIX }}
